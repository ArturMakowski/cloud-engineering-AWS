[project]
name = "aws-python"
description = "My package description"
authors = [{ name = "<your name>", email = "some-email@gmail.com" }]
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
dependencies = [
    "fastapi>=0.115.6",
]
classifiers = ["Programming Language :: Python :: 3"]
keywords = ["one", "two"]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = { file = "version.txt" }

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
aws_python = ["*.json"]

##############################
# --- Dependencies --- #
##############################

[dependency-groups]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
]
release = [
    "build",
    "twine",
]
static-code-qa = [
    "pre-commit",
    "pylint",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "Flake8-pyproject",
    "radon",
]
# Note: For dev dependencies, you'll need to install multiple groups
# uv pip install --group test --group release --group static-code-qa

##############################
# --- Code Quality Tools --- #
##############################

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.black]
line-length = 119
exclude = '''
/(
    \.venv
  | venv
)/
'''

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100"]
exclude = ["venv"]
max-line-length = 119
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
]
